
*** Running xst
    with args -ifn mojo_top_0.xst -ofn mojo_top_0.srp -intstyle ise

Reading design: mojo_top_0.prj

=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/shifterFunction_7.v" into library work
Parsing module <shifterFunction_7>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/cmpFunction_6.v" into library work
Parsing module <cmpFunction_6>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/boolFunction_5.v" into library work
Parsing module <boolFunction_5>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/adderFunction_4.v" into library work
Parsing module <adderFunction_4>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/reset_conditioner_1.v" into library work
Parsing module <reset_conditioner_1>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/memory_2.v" into library work
Parsing module <memory_2>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/alu_3.v" into library work
Parsing module <alu_3>.
Analyzing Verilog file "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" into library work
Parsing module <mojo_top_0>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <mojo_top_0>.

Elaborating module <reset_conditioner_1>.

Elaborating module <memory_2>.

Elaborating module <alu_3>.

Elaborating module <adderFunction_4>.

Elaborating module <boolFunction_5>.

Elaborating module <cmpFunction_6>.

Elaborating module <shifterFunction_7>.
WARNING:HDLCompiler:1127 - "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" Line 114: Assignment to M_alu_z ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" Line 115: Assignment to M_alu_v ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" Line 116: Assignment to M_alu_n ignored, since the identifier is never used

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top_0>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v".
WARNING:Xst:647 - Input <cclk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_ss> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_mosi> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_sck> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <avr_tx> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <avr_rx_busy> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <on_button> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
INFO:Xst:3210 - "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" line 109: Output port <z> of the instance <alu> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" line 109: Output port <v> of the instance <alu> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/mojo_top_0.v" line 109: Output port <n> of the instance <alu> is unconnected or connected to loadless signal.
    Found 26-bit register for signal <M_sclk_q>.
    Found 5-bit register for signal <M_state_q>.
    Found finite state machine <FSM_0> for signal <M_state_q>.
    -----------------------------------------------------------------------
    | States             | 23                                             |
    | Transitions        | 49                                             |
    | Inputs             | 3                                              |
    | Outputs            | 24                                             |
    | Clock              | clk (rising_edge)                              |
    | Reset              | M_reset_cond_out (positive)                    |
    | Reset type         | synchronous                                    |
    | Reset State        | 00000                                          |
    | Power Up State     | 00000                                          |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 26-bit adder for signal <M_sclk_q[25]_GND_1_o_add_0_OUT> created at line 123.
    Found 1-bit tristate buffer for signal <spi_miso> created at line 119
    Found 1-bit tristate buffer for signal <spi_channel<3>> created at line 119
    Found 1-bit tristate buffer for signal <spi_channel<2>> created at line 119
    Found 1-bit tristate buffer for signal <spi_channel<1>> created at line 119
    Found 1-bit tristate buffer for signal <spi_channel<0>> created at line 119
    Found 1-bit tristate buffer for signal <avr_rx> created at line 119
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_wa<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_wa<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_ra<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_ra<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_ra<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_ra<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_rb<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_rb<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_rb<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_rb<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_alit<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_blit<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_blit<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_blit<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_blit<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_blit<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_asel>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_bsel>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_alu_fn<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_alu_fn<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_alu_fn<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_alu_fn<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_wa<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_m_wa<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  26 D-type flip-flop(s).
	inferred  39 Latch(s).
	inferred  12 Multiplexer(s).
	inferred   6 Tristate(s).
	inferred   1 Finite State Machine(s).
Unit <mojo_top_0> synthesized.

Synthesizing Unit <reset_conditioner_1>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/reset_conditioner_1.v".
    Found 4-bit register for signal <M_stage_q>.
    Summary:
	inferred   4 D-type flip-flop(s).
Unit <reset_conditioner_1> synthesized.

Synthesizing Unit <memory_2>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/memory_2.v".
    Found 240-bit register for signal <M_reg_q>.
    Found 8-bit adder for signal <wa[3]_GND_3_o_add_0_OUT> created at line 31.
    Found 8-bit adder for signal <ra[3]_GND_3_o_add_255_OUT> created at line 35.
    Found 8-bit adder for signal <rb[3]_GND_3_o_add_258_OUT> created at line 40.
    Found 479-bit shifter logical right for signal <n0537> created at line 35
    Found 479-bit shifter logical right for signal <n0539> created at line 40
    Summary:
	inferred   3 Adder/Subtractor(s).
	inferred 240 D-type flip-flop(s).
	inferred 257 Multiplexer(s).
	inferred   2 Combinational logic shifter(s).
Unit <memory_2> synthesized.

Synthesizing Unit <alu_3>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/alu_3.v".
    Found 16-bit 4-to-1 multiplexer for signal <result> created at line 89.
    Summary:
	inferred   1 Multiplexer(s).
Unit <alu_3> synthesized.

Synthesizing Unit <adderFunction_4>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/adderFunction_4.v".
    Found 16-bit subtractor for signal <a[15]_b[15]_sub_2_OUT> created at line 29.
    Found 16-bit adder for signal <a[15]_b[15]_add_0_OUT> created at line 25.
    Found 16x16-bit multiplier for signal <n0030> created at line 33.
    Found 16-bit 4-to-1 multiplexer for signal <temp> created at line 23.
    Found 1-bit 3-to-1 multiplexer for signal <v> created at line 23.
    Summary:
	inferred   1 Multiplier(s).
	inferred   2 Adder/Subtractor(s).
	inferred   2 Multiplexer(s).
Unit <adderFunction_4> synthesized.

Synthesizing Unit <boolFunction_5>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/boolFunction_5.v".
    Found 1-bit 4-to-1 multiplexer for signal <res<0>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<1>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<2>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<3>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<4>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<5>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<6>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<7>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<8>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<9>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<10>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<11>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<12>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<13>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<14>> created at line 11.
    Found 1-bit 4-to-1 multiplexer for signal <res<15>> created at line 11.
    Summary:
	inferred  16 Multiplexer(s).
Unit <boolFunction_5> synthesized.

Synthesizing Unit <cmpFunction_6>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/cmpFunction_6.v".
    Found 1-bit 4-to-1 multiplexer for signal <temp> created at line 21.
    Summary:
	inferred   1 Multiplexer(s).
Unit <cmpFunction_6> synthesized.

Synthesizing Unit <shifterFunction_7>.
    Related source file is "/root/mojo/attacker_defender/work/planAhead/attacker_defender/attacker_defender.srcs/sources_1/imports/verilog/shifterFunction_7.v".
WARNING:Xst:647 - Input <b<15:4>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 16-bit shifter logical right for signal <a[15]_b[3]_shift_right_1_OUT> created at line 23
    Found 16-bit shifter arithmetic right for signal <a[15]_b[3]_shift_right_2_OUT> created at line 26
    Found 16-bit shifter logical left for signal <a[15]_b[3]_shift_left_3_OUT> created at line 29
    Found 16-bit 4-to-1 multiplexer for signal <res> created at line 18.
    Summary:
	inferred   1 Multiplexer(s).
	inferred   3 Combinational logic shifter(s).
Unit <shifterFunction_7> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 1
 16x16-bit multiplier                                  : 1
# Adders/Subtractors                                   : 6
 16-bit adder                                          : 1
 16-bit subtractor                                     : 1
 26-bit adder                                          : 1
 8-bit adder                                           : 3
# Registers                                            : 3
 240-bit register                                      : 1
 26-bit register                                       : 1
 4-bit register                                        : 1
# Latches                                              : 39
 1-bit latch                                           : 39
# Multiplexers                                         : 290
 1-bit 2-to-1 multiplexer                              : 14
 1-bit 3-to-1 multiplexer                              : 1
 1-bit 4-to-1 multiplexer                              : 17
 10-bit 2-to-1 multiplexer                             : 2
 11-bit 2-to-1 multiplexer                             : 2
 12-bit 2-to-1 multiplexer                             : 2
 13-bit 2-to-1 multiplexer                             : 2
 14-bit 2-to-1 multiplexer                             : 2
 15-bit 2-to-1 multiplexer                             : 2
 16-bit 2-to-1 multiplexer                             : 227
 16-bit 4-to-1 multiplexer                             : 3
 2-bit 2-to-1 multiplexer                              : 2
 3-bit 2-to-1 multiplexer                              : 2
 4-bit 2-to-1 multiplexer                              : 2
 5-bit 2-to-1 multiplexer                              : 2
 6-bit 2-to-1 multiplexer                              : 2
 7-bit 2-to-1 multiplexer                              : 2
 8-bit 2-to-1 multiplexer                              : 2
 9-bit 2-to-1 multiplexer                              : 2
# Logic shifters                                       : 5
 16-bit shifter arithmetic right                       : 1
 16-bit shifter logical left                           : 1
 16-bit shifter logical right                          : 1
 479-bit shifter logical right                         : 2
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6
# FSMs                                                 : 1
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <mojo_top_0>.
The following registers are absorbed into counter <M_sclk_q>: 1 register on signal <M_sclk_q>.
Unit <mojo_top_0> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 1
 16x16-bit multiplier                                  : 1
# Adders/Subtractors                                   : 5
 16-bit adder                                          : 1
 16-bit subtractor                                     : 1
 8-bit adder                                           : 3
# Counters                                             : 1
 26-bit up counter                                     : 1
# Registers                                            : 244
 Flip-Flops                                            : 244
# Multiplexers                                         : 290
 1-bit 2-to-1 multiplexer                              : 14
 1-bit 3-to-1 multiplexer                              : 1
 1-bit 4-to-1 multiplexer                              : 17
 10-bit 2-to-1 multiplexer                             : 2
 11-bit 2-to-1 multiplexer                             : 2
 12-bit 2-to-1 multiplexer                             : 2
 13-bit 2-to-1 multiplexer                             : 2
 14-bit 2-to-1 multiplexer                             : 2
 15-bit 2-to-1 multiplexer                             : 2
 16-bit 2-to-1 multiplexer                             : 227
 16-bit 4-to-1 multiplexer                             : 3
 2-bit 2-to-1 multiplexer                              : 2
 3-bit 2-to-1 multiplexer                              : 2
 4-bit 2-to-1 multiplexer                              : 2
 5-bit 2-to-1 multiplexer                              : 2
 6-bit 2-to-1 multiplexer                              : 2
 7-bit 2-to-1 multiplexer                              : 2
 8-bit 2-to-1 multiplexer                              : 2
 9-bit 2-to-1 multiplexer                              : 2
# Logic shifters                                       : 5
 16-bit shifter arithmetic right                       : 1
 16-bit shifter logical left                           : 1
 16-bit shifter logical right                          : 1
 479-bit shifter logical right                         : 2
# FSMs                                                 : 1
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
WARNING:Xst:1710 - FF/Latch <M_m_blit_15> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_1> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_2> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_0> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_3> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_4> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_5> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_6> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_7> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_8> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_9> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_10> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_11> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_12> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_13> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_14> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <M_m_alit_15> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <FSM_0> on signal <M_state_q[1:5]> with user encoding.
-------------------
 State | Encoding
-------------------
 00000 | 00000
 10100 | 10100
 00010 | 00010
 00011 | 00011
 00100 | 00100
 00101 | 00101
 00110 | 00110
 00111 | 00111
 01000 | 01000
 01001 | 01001
 01010 | 01010
 01011 | 01011
 01100 | 01100
 01101 | 01101
 01110 | 01110
 01111 | 01111
 10000 | 10000
 10001 | 10001
 10010 | 10010
 10011 | 10011
 10101 | 10101
 10110 | 10110
 10111 | 10111
-------------------
INFO:Xst:2261 - The FF/Latch <M_m_wa_1> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <M_m_ra_1> 

Optimizing unit <mojo_top_0> ...

Optimizing unit <memory_2> ...

Optimizing unit <alu_3> ...

Optimizing unit <adderFunction_4> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block mojo_top_0, actual ratio is 15.

Final Macro Processing ...

Processing Unit <mojo_top_0> :
INFO:Xst:741 - HDL ADVISOR - A 4-bit shift register was found for signal <reset_cond/M_stage_q_3> and currently occupies 4 logic cells (2 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
Unit <mojo_top_0> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 275
 Flip-Flops                                            : 275

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Clock Information:
------------------
-------------------------------------------------------+------------------------+-------+
Clock Signal                                           | Clock buffer(FF name)  | Load  |
-------------------------------------------------------+------------------------+-------+
M_state_q[4]_PWR_12_o_Mux_100_o(M_state_q__n0582<2>1:O)| BUFG(*)(M_m_wa_3)      | 21    |
clk                                                    | BUFGP                  | 275   |
-------------------------------------------------------+------------------------+-------+
(*) This 1 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 13.034ns (Maximum Frequency: 76.722MHz)
   Minimum input arrival time before clock: 3.526ns
   Maximum output required time after clock: 4.444ns
   Maximum combinational path delay: No path found

=========================================================================
